!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).zilt={})}(this,(function(t){"use strict";class e extends Error{}function n(...t){let e=0,n=1/0;2===t.length?[e,n]=t:1===t.length&&([n]=t);const r=e<n?1:-1,i=function*(){for(let t=e;t!==n;t+=r)yield t}();return new o(i)}class o{constructor(t){this.generator=function*(){for(const e of t)yield e}}*[Symbol.iterator](){for(const t of this.generator())yield t}collect(){return[...this]}consume(){for(const t of this);}map(t){const e=this.generator,n=function*(){let n=0;for(const o of e())yield t(o,n),n+=1}();return new o(n)}filter(t){const e=this.generator,n=function*(){let n=0;for(const o of e())t(o,n)&&(yield o,n+=1)}();return new o(n)}skip(t){if(t<0)throw new e("Invalid skip parameter");const n=this.generator,r=function*(){let e=n();for(let n=0;n<t;++n)e.next();for(const t of e)yield t}();return new o(r)}skipWhile(t){const e=this.generator,n=function*(){let n=e(),o=n.next().value,r=0;for(;t(o,r);)o=n.next().value,r+=1;yield o;for(const t of n)yield t}();return new o(n)}take(t){if(t<0)throw new e("Invalid take parameter");const n=this.generator,r=function*(){for(const e of n()){if(0===t)break;yield e,t-=1}}();return new o(r)}takeWhile(t){const e=this.generator,n=function*(){let n=e(),o=n.next().value,r=0;for(;t(o,r);)yield o,o=n.next().value,r+=1}();return new o(n)}reduce(t,n=null){const o=this.generator();let r=o.next();if(null===n&&r.done)throw new e("Reduce of empty iterator with no initial value");let i=null===n?r.value:t(n,r.value);for(const e of o)i=t(i,e);return i}accumulate(t,n=null){const r=this.generator();let i=r.next();if(null===n&&i.done)throw new e("Reduce of empty iterator with no initial value");const f=function*(){let e=null===n?i.value:t(n,i.value);yield e;for(const n of r)e=t(e,n),yield e}();return new o(f)}count(t=(()=>!0)){return this.reduce(((e,n)=>t(n)?e+1:e),0)}flat(t){if(t<0||t>15)throw new e("Invalid depth for flatten, allowed range is [0, 15]");const n=function*e(n,o=t){for(const t of n)Symbol.iterator in Object(t)&&0!==o?yield*e(t,o-1):yield t}(this.generator());return new o(n)}chunks(t){const e=this.generator,n=function*(){let n=[];for(const o of e())n.push(o),n.length===t&&(yield n,n=[]);0!==n.length&&(yield n)}();return new o(n)}windows(t){if(t<=0)throw new e("Invalid window length");const n=this.generator,r=function*(){let e=[],o=!1;for(const r of n())e.push(r),e.length===t&&(yield e,o=!0,e=e.slice(1));o||(yield e)}();return new o(r)}enumerate(){const t=this.generator,e=function*(){let e=0;for(const n of t())yield[n,e],e+=1}();return new o(e)}step(t){if(t<=0)throw new e("Invalid step");const n=this.generator,r=function*(){let e=0;for(const o of n())e%t==0&&(yield o),e+=1}();return new o(r)}zip(...t){const e=this.generator,n=function*(){const n=[e(),...t.map((t=>t[Symbol.iterator]()))];let o=n.map((t=>t.next()));for(;o.every((t=>!t.done));){const t=o.map((t=>t.value));yield t,o=n.map((t=>t.next()))}}();return new o(n)}unzip(){let t=[];for(const n of this.generator()){if(!1===Array.isArray(n))throw new e("Element type is not an array");const o=n,r=t.length;t.length=Math.max(r,o.length);for(let e=r;e<t.length;e++)t[e]=[];let i=0;for(const e of o)t[i].push(e),i+=1}return t}flatMap(t){return this.map(t).flat(1)}partition(t){const e=[],n=[];let o=0;for(const r of this.generator())t(r,o)?e.push(r):n.push(r),o+=1;return[e,n]}nth(t){if(t>=0){const e=this.skip(t)[Symbol.iterator]().next();if(!e.done)return e.value}}first(){return this.nth(0)}last(){let t;for(const e of this.generator())t=e;return t}every(t){let e=0;for(const n of this.generator()){if(!t(n,e))return!1;e+=1}return!0}some(t){let e=0;for(const n of this.generator()){if(t(n,e))return!0;e+=1}return!1}find(t){let e=0;for(const n of this.generator()){if(t(n,e))return n;e+=1}}position(t){let e=0;for(const n of this.generator()){if(t(n,e))return e;e+=1}}chain(...t){const e=this.generator,n=function*(){for(const t of e())yield t;for(const e of t)for(const t of e)yield t}();return new o(n)}cycle(t=1/0){if(t<0)throw new e("Invalid count parameter");const n=this.generator,r=[],i=function*(){if(0!==t){for(const t of n())r.push(t),yield t;for(;--t;)for(const t of r)yield t}}();return new o(i)}stretch(t){if(t<0)throw new e("Invalid stretch parameter");const n=this.generator,r=function*(){if(0!==t)for(const e of n())for(let n=0;n<t;n++)yield e}();return new o(r)}forEach(t){let e=0;for(const n of this.generator())t(n,e),e+=1}min(t){let e,n=1/0;for(const o of this.generator()){const r=t(o);r<n&&(n=r,e=o)}return e}max(t){let e,n=-1/0;for(const o of this.generator()){const r=t(o);r>n&&(n=r,e=o)}return e}unique(){return this.uniqueBy((t=>t))}uniqueBy(t){const e=this.generator,n=function*(){const n=new Set;for(const o of e())!1===n.has(t(o))&&(yield o,n.add(t(o)))}();return new o(n)}inspect(t){const e=this.generator,n=function*(){for(const n of e())t(n),yield n}();return new o(n)}slice(t,n=1/0){if(t<0||n<0||t>n)throw new e("Invalid slice range");return this.skip(t).take(n-t)}nest(...t){if("number"==typeof t[0])return this._nestRange(...t);const e=this.generator,n=Array.isArray(t[0])?t[0]:[...t[0]],r=function*(){for(const t of e())for(const e of n)yield[t,e]}();return new o(r)}_nestRange(...t){let e=0,r=1/0;2===t.length?[e,r]=t:1===t.length&&(r=t[0]);const i=this.generator,f=function*(){for(const t of i())for(const o of n(e,r))yield[t,o]}();return new o(f)}}t.ZiltError=e,t.chain=function(...t){const e=function*(){for(const e of t)for(const t of e)yield t}();return new o(e)},t.iter=function(t){return new o(t)},t.once=function(t){return new o(function*(){yield t}())},t.range=n,t.zip=function(...t){const e=function*(){if(0===t.length)return;const e=t.map((t=>t[Symbol.iterator]()));let n=e.map((t=>t.next()));for(;n.every((t=>!t.done));){const t=n.map((t=>t.value));yield t,n=e.map((t=>t.next()))}}();return new o(e)},Object.defineProperty(t,"__esModule",{value:!0})}));
